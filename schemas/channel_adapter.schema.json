{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://dao.example.org/schemas/channel_adapter.schema.json",
    "title": "Channel Adapter Schema",
    "description": "Defines a concrete software adapter that speaks to a specific Transmission Medium (e.g., AirTag rename, Wi‑Fi SSID beacon, Bitcoin mempool).  The adapter exposes the uniform async interface `write(bytes)` / `read()`.  This schema captures its static capabilities so routing code can pick the right adapter at runtime.",
    "type": "object",
    "required": ["id", "type", "medium_id", "max_bytes", "library"],
    "properties": {
      "id": {
        "type": "string",
        "description": "Canonical slug; prefix `ch.` recommended (e.g., `ch.airtag-rename`).",
        "pattern": "^[a-z0-9_.-]+$"
      },
      "type": {
        "const": "ChannelAdapter",
        "description": "Fixed discriminator so graph loaders can quickly determine object class."
      },
      "medium_id": {
        "type": "string",
        "description": "`id` of the `TransmissionMedium` this adapter rides on (e.g., `tm.airtag-rename`)."
      },
      "max_bytes": {
        "type": "integer",
        "minimum": 1,
        "description": "Hard ceiling (after encryption + header) that `write()` accepts per call."
      },
      "library": {
        "type": "string",
        "description": "Primary Python package or system tool the adapter uses (e.g., `pyicloud`, `bluez`, `bitcoinlib`)."
      },
      "requires_hardware": {
        "type": "boolean",
        "default": false,
        "description": "True if special hardware (USB dongle, SDR, YubiKey) is mandatory."
      },
      "directionality": {
        "type": "string",
        "enum": ["tx-only", "rx-only", "bidirectional"],
        "default": "bidirectional",
        "description": "Whether adapter can both write and read or is limited to one direction."
      },
      "bandwidth_bps": {
        "type": "number",
        "minimum": 0,
        "description": "Typical sustained throughput in bytes per second (best‑effort estimate)."
      },
      "setup_instructions": {
        "type": "string",
        "description": "Markdown snippet describing how to install drivers, obtain API keys, etc."
      },
      "crypto_profile": {
        "type": "object",
        "description": "Cryptographic capabilities and FIPS compliance information",
        "properties": {
          "crypto_profile_id": {
            "type": "string",
            "description": "Reference to a FIPS cryptographic profile (e.g., 'crypto.hsm-validated')",
            "pattern": "^crypto\\.[a-z0-9_-]{3,64}$"
          },
          "encryption_algorithms": {
            "type": "array",
            "description": "Encryption algorithms supported by this adapter",
            "items": {
              "type": "string",
              "enum": [
                "AES-128-ECB", "AES-192-ECB", "AES-256-ECB", 
                "AES-128-CBC", "AES-192-CBC", "AES-256-CBC", 
                "AES-128-GCM", "AES-192-GCM", "AES-256-GCM", 
                "AES-128-CCM", "AES-192-CCM", "AES-256-CCM", 
                "ChaCha20", "ChaCha20-Poly1305", "3DES"
              ]
            }
          },
          "hash_algorithms": {
            "type": "array",
            "description": "Hash algorithms supported by this adapter",
            "items": {
              "type": "string",
              "enum": [
                "SHA-1", "SHA-224", "SHA-256", "SHA-384", "SHA-512",
                "SHA3-224", "SHA3-256", "SHA3-384", "SHA3-512"
              ]
            }
          },
          "crypto_container": {
            "type": "string",
            "enum": ["TPM", "HSM", "TEE", "SecureEnclave", "Software", "SmartCard", "PKCS11", "CloudHSM"],
            "description": "Type of cryptographic container used by this adapter"
          }
        }
      },
      "meta": {
        "type": "object",
        "description": "Open field for adapter‑specific details (e.g., BLE MAC address, RPC endpoint).",
        "additionalProperties": true
      }
    },
    "additionalProperties": false,
    "examples": [
      {
        "id": "ch.airtag-rename",
        "type": "ChannelAdapter",
        "medium_id": "tm.airtag-rename",
        "max_bytes": 26,
        "library": "pyicloud",
        "requires_hardware": false,
        "directionality": "bidirectional",
        "bandwidth_bps": 13,
        "setup_instructions": "Needs iCloud app‑specific password stored in env `ICLOUD_PWD`.",
        "crypto_profile": {
          "crypto_profile_id": "crypto.secure-enclave",
          "encryption_algorithms": ["AES-256-GCM"],
          "hash_algorithms": ["SHA-256"],
          "crypto_container": "SecureEnclave"
        }
      }
    ]
  }
